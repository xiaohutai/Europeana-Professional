{#
    structures list template.
    - collects content for structure and possible assigend contenttype
    - set pager options
    - include "default" list template
#}

{# get contenttype object #}
{% set contenttype = structurecontenttype(record.slug) %}
{% if contenttype == 0 %}
    {% set contenttype = getContenttype(record.content) %}
{% endif %}

{# set order / page / amount #}
{% if contenttype != 0 %}

    {# set order #}
    {% set order = '' %}

    {# override by contenttype #}
    {% if contenttype['sort'] in app.config.get('contenttypes/' ~ record.content|lower ~ '/fields') %}
        {% set order = contenttype['sort'] %}
    {% endif %}

    {# Override in URL #}
    {% if app.request.get('order') %}
        {% set order = app.request.get('order') %}
            {% else %}
    {% endif %}

    {# set page number #}
    {% set page = app.request.get('page', 1) %}

    {# set amount #}
    {% if contenttype['listing_records'] is defined %}
        {% set amount = contenttype['listing_records'] %}
    {% else %}
        {% set amount = app.config.get('general/listing_records') %}
    {% endif %}

{% endif %}

{# Note: listing for blog content is DEFINED IN listing.twig. See #223. #}

{# listing for stucture with fixed content  #}
{% if (record.content != '' and record.content != 'default' )  %}
    {% setcontent records = record.content where { limit : amount, order : order, page : page } allowpaging %}

    {# manual override ordering #}
    {% if record.content == 'TaskForces' %}
        {% set records = records|order('-date_start', '-date_end') %}
    {% endif %}

{# listing for mixed content (structure + contenttype) #}
{% elseif contenttype %}
    {#
        because of the mixed content, we have to sort the list manually.
        1. get all structure and contenttype content by tree
        2. merge and order the result
        3. calculate pager properties
        4. slice result list
    #}

    {# get content for current structure #}
    {#     {% set recordsStructure = [] %}
    {% if (order in record.values|keys) or ( order|slice(1,order|length) in record.values|keys ) %}
      {% setcontent recordsStructure = 'Structures' where { tree : record.slug, order : order }  %}
    {% endif %} #}

    {# get content assigned contenttype #}
    {% setcontent records = contenttype['name'] where { limit: amount, order: order, page : page } allowpaging %}

    {# merge content #}
    {# {% set records = records|merge(recordsStructure)|order(order) %} #}
    {% if record.slug == "project-list" %}
        {% setcontent extraprojects = 'structures' where { id: '16 || 27 || 49' }  %}
        {% set records = records|merge(extraprojects) %}
    {% endif %}

    {# ------- Bob notes: I don't think we should manipulate pager here and/or slice the results.
    Removing that here, fixes https://www.assembla.com/spaces/europeana-professional/tickets/160

    {# set pager properties. totalpages always round up # }
    {% set pager = { totalpages :  (records|length/amount)|round(0, 'ceil'),  current : page }  %}

    {# get items to display # }
    {% set records = records|slice(amount*(page-1),amount) %}
    ---- #}

{# listing for structure content #}
{% else %}
    {% setcontent records = 'Structures' where { tree : record.slug } %}
{% endif %}


{# include contenttype list template #}
{% if records is defined %}

    {# for contenttype "Person" include listing_person #}
    {% if (records|length and records|first.contenttype.name == 'Persons') %}

        {% if app.request.get('slug') in ['partners', 'partners/'] %}
            {% setcontent persons = 'persons' where {department: 'Our Partner'} order 'company' %}
        {% else %}
            {% setcontent persons = 'persons' where {department: 'Europeana Staff'} order 'team' %}
        {% endif %}
        {% include 'listing_person.twig' with {records: persons } %}

    {# for the other content use the default listing #}
    {% else %}

        {% include 'listing.twig' with { records: records } %}

    {% endif %}

{% endif %}
